swagger: '2.0'
info:
  description: This is an Api server for MIRIM IT SHOW entry 'Scanus'.  You can find out more about     Scanus at [https://github.com/mirimitshow](https://github.com/mirimitshow).
  version: 1.0.0
  title: Scanus
  # put the contact info for your development or API team
  contact:
    email: wisemuji@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /signup:
    post:
      tags:
      - Auth
      summary: Signing up user
      operationId: signup
      description: ""
      consumes:
        - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - in: body
        name: Users object
        description: Put new Users object
        schema:
          $ref: '#/definitions/Users'
      responses:
        200:
          description: user signed up
        400:
          description: invalid input, object invalid
        409:
          description: user already exists
  /signin:
    post:
      tags:
      - Auth
      summary: Signing in user
      operationId: signin
      description: ""
      consumes:
        - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: "email"
        in: "query"
        description: "The user email for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: user logined
        400:
          description: invalid input, object invalid
  /setGroup:
    post:
      tags:
      - Group
      summary: Add new Group
      operationId: setGroup
      description: ""
      consumes:
        - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - in: body
        name: Groups object
        description: Put new Group object(key "token" is autogenerated)
        schema:
          $ref: '#/definitions/Groups'
      responses:
        200:
          description: new group added
        400:
          description: invalid input, object invalid
        409:
          description: group already exists
  /getGroup/<token>:
    get:
      tags:
      - Group
      summary: Find existing Group
      operationId: getGroup
      description: ""
      produces:
      - application/json
      parameters:
      - name: "token"
        in: "query"
        description: "The token of group to be found"
        required: true
        type: "string"
      responses:
        200:
          description: returns existing Group
          schema:
            $ref: '#/definitions/Groups'
        400:
          description: invalid input, object invalid
  /getUser/<email>:
    get:
      tags:
      - User
      summary: Get user info
      operationId: getUser
      description: ""
      produces:
      - application/json
      parameters:
      - name: "email"
        in: "query"
        description: "The email of user"
        required: true
        type: "string"
      responses:
        200:
          description: returns user
          schema:
            $ref: '#/definitions/Users'
        400:
          description: invalid input, object invalid
  /getUserGroups/<email>:
    get:
      tags:
      - User
      summary: Find User's Groups
      operationId: getUserGroups
      description: ""
      produces:
      - application/json
      parameters:
      - name: "email"
        in: "query"
        description: "The email of user"
        required: true
        type: "string"
      responses:
        200:
          description: returns user's Groups
          schema:
            $ref: '#/definitions/GroupsArray'
        400:
          description: invalid input, object invalid
  /joinGroup:
    post:
      tags:
      - Group
      summary: Members can join Group
      operationId: joinGroup
      description: ""
      consumes:
        - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: "token"
        in: "query"
        description: "The token of group"
        required: true
        type: "string"
      - name: "email"
        in: "query"
        description: "The email of user"
        required: true
        type: "string"
      responses:
        200:
          description: success joined group
        400:
          description: invalid input, object invalid
  /setTimetable:
    post:
      tags:
      - Group
      summary: Set Group's timetable
      operationId: setTimetable
      description: ""
      consumes:
        - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: "token"
        in: "query"
        description: "The token of group to be set"
        required: true
        type: "string"
      - name: "img"
        in: "query"
        description: "The token of group to be set"
        required: true
        type: "string"
      responses:
        200:
          description: returns existing Group
          schema:
            $ref: '#/definitions/Groups'
        400:
          description: invalid input, object invalid
  /setBoard:
    post:
      tags:
      - Board
      summary: Add new board in group
      operationId: setBoard
      description: ""
      consumes: 
        - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - in: body
        name: Boards object
        description: Put new Boards object. (Date is not nessessary)
        schema:
          $ref: '#/definitions/Boards'
      responses:
        200:
          description: new board successfully added
        400:
          description: invalid input, object invalid
        409:
          description: duplicated board
  /getBoard/<token>:
    get:
      tags:
      - Board
      summary: Get one board by token
      operationId: getBoard
      description: ""
      produces:
      - application/json
      parameters:
      - name: "token"
        in: "query"
        description: "The token of board"
        required: true
        type: "string"
      responses:
        200:
          description: returns Board
          schema:
            $ref: '#/definitions/Boards'
        400:
          description: invalid input, object invalid
  /getGroupBoards/<token>:
    get:
      tags:
      - Board
      summary: Find Group's Boards
      operationId: getUserBoards
      description: ""
      produces:
      - application/json
      parameters:
      - name: "token"
        in: "query"
        description: "The token of group"
        required: true
        type: "string"
      responses:
        200:
          description: returns user's Groups
          schema:
            $ref: '#/definitions/BoardsArray'
        209:
          description: No board found
        400:
          description: invalid input, object invalid
  /setScan:
    post:
      tags:
      - Scan
      summary: Add new Scanned image in group
      operationId: setScan
      description: ""
      consumes:
        - multipart/form-data
      produces:
      - application/json
      parameters:
      - in: body
        name: Scans object
        description: Put new Scans object.
        schema:
          $ref: '#/definitions/Scans'
      responses:
        200:
          description: new scan Ssuccessfully added
        400:
          description: invalid input, object invalid
        409:
          description: duplicated scan
  /getScans/<email>/<cartegory>:
    get:
      tags:
      - Scan
      summary: Get User's Scanned images by cartegory
      operationId: getScans
      description: ""
      produces:
      - application/json
      parameters:
      - name: "email"
        in: "query"
        description: "The email of user"
        required: true
        type: "string"
      - name: "cartegory"
        in: "query"
        description: "The cartegory of image"
        required: true
        type: "string"
      responses:
        200:
          description: returns user's Scanned images
          schema:
            $ref: '#/definitions/ScansArray'
        209:
          description: No Scanned images found
        400:
          description: invalid input, object invalid
definitions:
  Users:
    type: object
    required:
    - name
    - email
    - phone
    - password
    properties:
      name:
        type: string
        example: Suhyeon Kim
      email:
        type: string
        format: email
        example: te@st.com
      phone:
        type: string
        example: '010-0000-0000'
      password:
        type: string
        example: '0000'
      group:
        type: array
        items: 
          properties:
            token:
              type: string
              example: iu2k343kj223lk
        description: token of user's groups
      cartegory:
        type: array
        items: 
          properties:
            name:
              type: string
              example: 영어
        description: cartegory of user's scanned images
  Groups:
    required:
    - token
    - name
    properties:
      token:
        type: string
        example: rsdcx98wefsdcxz
      name:
        type: string
        example: Happy Group
      members:
        type: array
        items: 
          properties:
            email:
              type: string
              example: iu2k343kj223lk
        description: token of group's members
      boards:
        type: array
        items: 
          properties:
            token:
              type: string
              example: iu2k343kj223lk
        description: token of group's boards
      timetable:
        type: object
        properties:
          id:
            type: string
          url:
            type: string
        description: id and url of group's timetable image
      image:
        type: object
        properties:
          id:
            type: string
          url:
            type: string
        description: id and url of group's image
  GroupsArray:
    required:
    - token
    properties:
      groups:
        type: array
        items: 
          $ref: '#/definitions/Groups'
        description: array of groups
  Boards:
    required:
    - token
    - group_token
    - isNotice
    - author
    - title
    - content
    properties:
      token:
        type: string
        example: fink32jbkj2kjde
        description: board's token 
      group_token:
        type: string
        example: rsdcx98wefsdcxz
        description: group's token
      isNotice:
        type: string
        example: true
        description: check the board if it's notice
      author:
        type: string
        example: 김수현
      title:
        type: string
        example: Nice Board
      content:
        type: string
        example: Haha 
      date:
        type: string
        example: '2018-11-28T09:08:28.758Z'
        description: board's token 
      image:
        type: object
        properties:
          id:
            type: string
          url:
            type: string
        description: image id and url of board's image
  BoardsArray:
    required:
    - token
    properties:
      boards:
        type: array
        items: 
          $ref: '#/definitions/Boards'
        description: array of boards
  Scans:
    required:
    - email
    - cartegory
    - name
    - id
    - url
    properties:
      email:
        type: string
        example: test@test.com
        description: email of current user 
      cartegory:
        type: string
        example: 영어
        description: cartegory of scanned image
      name:
        type: string
        example: 영어 이미지
        description: name of scanned image
      id:
        type: string
        example: '1558005653449.png'
      url:
        type: string
        example: 'images/scan/1558005653449.png'
  ScansArray:
    required:
    - token
    properties:
      scans:
        type: array
        items: 
          $ref: '#/definitions/Scans'
        description: array of scans
schemes:
 - https
 - http
host: 'ec2-54-180-124-242.ap-northeast-2.compute.amazonaws.com'
basePath: /